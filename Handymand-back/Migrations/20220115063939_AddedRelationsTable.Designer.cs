// <auto-generated />
using System;
using Handymand.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Handymand.Migrations
{
    [DbContext(typeof(HandymandContext))]
    [Migration("20220115063939_AddedRelationsTable")]
    partial class AddedRelationsTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Handymand.Models.DatabaseModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DataBaseModels");
                });

            modelBuilder.Entity("Handymand.Models.Many_to_Many.Model1MM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Model1MMs");
                });

            modelBuilder.Entity("Handymand.Models.Many_to_Many.Model2MM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Model2MMs");
                });

            modelBuilder.Entity("Handymand.Models.Many_to_Many.ModelsRelation", b =>
                {
                    b.Property<int>("Model1MMId")
                        .HasColumnType("int");

                    b.Property<int>("Model2MMId")
                        .HasColumnType("int");

                    b.HasKey("Model1MMId", "Model2MMId");

                    b.HasIndex("Model2MMId");

                    b.ToTable("ModelsRelations");
                });

            modelBuilder.Entity("Handymand.Models.One_to_Many.Model1OM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Model1OMs");
                });

            modelBuilder.Entity("Handymand.Models.One_to_Many.Model2OM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<int>("Model1Id")
                        .HasColumnType("int");

                    b.Property<int?>("Model1OMId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Model1OMId");

                    b.ToTable("Model2OMs");
                });

            modelBuilder.Entity("Handymand.Models.One_to_One.Model1OO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Model1OOs");
                });

            modelBuilder.Entity("Handymand.Models.One_to_One.Model2OO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<int>("Model1Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Model1Id")
                        .IsUnique();

                    b.ToTable("Model2OOs");
                });

            modelBuilder.Entity("Handymand.Models.Many_to_Many.ModelsRelation", b =>
                {
                    b.HasOne("Handymand.Models.Many_to_Many.Model1MM", "Model1MM")
                        .WithMany("ModelsRelations")
                        .HasForeignKey("Model1MMId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Handymand.Models.Many_to_Many.Model2MM", "Model2MM")
                        .WithMany("ModelsRelations")
                        .HasForeignKey("Model2MMId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Model1MM");

                    b.Navigation("Model2MM");
                });

            modelBuilder.Entity("Handymand.Models.One_to_Many.Model2OM", b =>
                {
                    b.HasOne("Handymand.Models.One_to_Many.Model1OM", "Model1OM")
                        .WithMany("Models2OM")
                        .HasForeignKey("Model1OMId");

                    b.Navigation("Model1OM");
                });

            modelBuilder.Entity("Handymand.Models.One_to_One.Model2OO", b =>
                {
                    b.HasOne("Handymand.Models.One_to_One.Model1OO", "Model1OO")
                        .WithOne("Model2OO")
                        .HasForeignKey("Handymand.Models.One_to_One.Model2OO", "Model1Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Model1OO");
                });

            modelBuilder.Entity("Handymand.Models.Many_to_Many.Model1MM", b =>
                {
                    b.Navigation("ModelsRelations");
                });

            modelBuilder.Entity("Handymand.Models.Many_to_Many.Model2MM", b =>
                {
                    b.Navigation("ModelsRelations");
                });

            modelBuilder.Entity("Handymand.Models.One_to_Many.Model1OM", b =>
                {
                    b.Navigation("Models2OM");
                });

            modelBuilder.Entity("Handymand.Models.One_to_One.Model1OO", b =>
                {
                    b.Navigation("Model2OO");
                });
#pragma warning restore 612, 618
        }
    }
}
